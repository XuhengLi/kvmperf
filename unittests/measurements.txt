Arndale with vgic:
------------------


hvc	5594	5592	5596	5594	5607	5611	5591	5600	5641
noop_guest	8	8	8	8	8	8	8	8	8
mmio_read_user	10812	10789	10783	10788	10813	10814	10812	10910	10823
mmio_read_vgic	6748	6762	6799	6840	6861	6762	6768	6804	6791
ipi	14246	14181	14160	14171	14203	14224	14156	14157	14285
eoi	164	164	164	165	165	165	165	165	165

average:
hvc	5602
noop_guest	8
mmio_read_user	10816
mmio_read_vgic	6792
ipi	14198
eoi	164



Arndale without vgic:
---------------------
hvc	2445	2450	2433	2452	2434	2435	2460
noop_guest	8	8	8	8	8	8	8
mmio_read_user	6880	7008	7020	7219	7016	7030	6986
mmio_read_vgic	7243	7391	7196	7400	7383	7300	7234
ipi	75021	225988	565957	469077	203057	379191	147751
eoi	20115	7212	55260	7274	8632	7223	19283

average:
hvc		2138
noop_guest	7
mmio_read_user	6144
mmio_read_vgic	6393
ipi	258255
eoi	15624


mmio_kernel	7361	7389	7088	7253	7324	7084	7259	7324	6964	6991	7030
average:	7234

Measuring kernel mmio when not using vgic/timers requires a hack, because
we don't have any default in-kernel mmio handling code to measure against.

Therefore apply these patches to the kernel and the unit-tests tool, respectively:

diff --git a/arch/arm/kvm/mmio.c b/arch/arm/kvm/mmio.c
index 72a12f2..86798be 100644
--- a/arch/arm/kvm/mmio.c
+++ b/arch/arm/kvm/mmio.c
@@ -138,6 +138,9 @@ int io_mem_abort(struct kvm_vcpu *vcpu, struct kvm_run *run,
 	if (mmio.is_write)
 		memcpy(mmio.data, vcpu_reg(vcpu, rt), mmio.len);
 
+	if (fault_ipa == 0xeeeee000)
+		return 1;
+
 	if (vgic_handle_mmio(vcpu, run, &mmio))
 		return 1;
 


diff --git a/arm/vmexit.c b/arm/vmexit.c
index d67aae6..7bd5e5f 100644
--- a/arm/vmexit.c
+++ b/arm/vmexit.c
@@ -332,6 +332,17 @@ static int eoi_test(void)
 	return CYCLE_COUNT(c1, c2);
 }
 
+static int mmio_kernel(void)
+{
+	unsigned long val;
+	unsigned long c1, c2;
+
+	c1 = read_cc();
+	val = readl(0xeeeee000);
+	c2 = read_cc();
+	return CYCLE_COUNT(c1, c2);
+}
+
 static struct exit_test available_tests[] = {
 	{ "hvc",		hvc_test,	NULL,			false },
 	{ "noop_guest",		noop_guest,	NULL,			false },
@@ -339,6 +350,7 @@ static struct exit_test available_tests[] = {
 	{ "mmio_read_vgic",	mmio_read_vgic,	mmio_read_vgic_init,	false },
 	{ "ipi",		ipi_test,	ipi_test_init,		false },
 	{ "eoi",		eoi_test,	eoi_test_init,		false },
+	{ "mmio_kernel",	mmio_kernel,	NULL,		false },
 };
 
 static struct exit_test *find_test(char *name)
